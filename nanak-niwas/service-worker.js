"use strict";var precacheConfig=[["/avtarbams/avtarbams.github.io/nanak-niwas/index.html","8f237f63bf94e06716ac5e7919ba5be2"],["/avtarbams/avtarbams.github.io/nanak-niwas/static/css/main.8abc5d6f.css","d753b6e60a4244c3feb982b021e0c4e9"],["/avtarbams/avtarbams.github.io/nanak-niwas/static/js/main.3472d759.js","2246106b23e6711168b150dcca4cb932"],["/avtarbams/avtarbams.github.io/nanak-niwas/static/media/MAIN SLIDER 01.e7d09087.jpg","e7d0908729aac82e3d07d4bfeb5932b6"],["/avtarbams/avtarbams.github.io/nanak-niwas/static/media/MAIN SLIDER 02.9b2d5161.jpg","9b2d5161884e8e594d6b2711031ba49d"],["/avtarbams/avtarbams.github.io/nanak-niwas/static/media/brandon-grotesque-black-58a8a3e824392.b06b21dd.woff","b06b21ddadc77852396428cd9fa4a733"],["/avtarbams/avtarbams.github.io/nanak-niwas/static/media/brandon-grotesque-bold-italic-58a8a48221563.a0d9e388.woff","a0d9e3883b9a037fa9ab8d498bcec5cf"],["/avtarbams/avtarbams.github.io/nanak-niwas/static/media/brandon-grotesque-light-58a8a4b38001d.672276aa.woff","672276aa9f825b662a0e8b4b75aeb107"],["/avtarbams/avtarbams.github.io/nanak-niwas/static/media/brandon-grotesque-light-italic-58a8a4ccb88be.a1194084.woff","a11940842fbcda12064f127c070369ff"],["/avtarbams/avtarbams.github.io/nanak-niwas/static/media/brandon-grotesque-medium-italic-58a8a3c40866a.d6a46085.woff","d6a460856cc1dead8297e7de2d472e11"],["/avtarbams/avtarbams.github.io/nanak-niwas/static/media/brandon-grotesque-regular-italic-58a8a456c4724.094666b3.woff","094666b396aee4ce6035d2f83a10731c"],["/avtarbams/avtarbams.github.io/nanak-niwas/static/media/brandon-grotesque-thin-italic-58a8a3a8861fe.74cfae73.woff","74cfae73a6a3c8c3335c5ca45831c772"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(a,e){var t=new URL(a);return"/"===t.pathname.slice(-1)&&(t.pathname+=e),t.toString()},cleanResponse=function(e){return e.redirected?("body"in e?Promise.resolve(e.body):e.blob()).then(function(a){return new Response(a,{headers:e.headers,status:e.status,statusText:e.statusText})}):Promise.resolve(e)},createCacheKey=function(a,e,t,n){var r=new URL(a);return n&&r.pathname.match(n)||(r.search+=(r.search?"&":"")+encodeURIComponent(e)+"="+encodeURIComponent(t)),r.toString()},isPathWhitelisted=function(a,e){if(0===a.length)return!0;var t=new URL(e).pathname;return a.some(function(a){return t.match(a)})},stripIgnoredUrlParameters=function(a,t){var e=new URL(a);return e.hash="",e.search=e.search.slice(1).split("&").map(function(a){return a.split("=")}).filter(function(e){return t.every(function(a){return!a.test(e[0])})}).map(function(a){return a.join("=")}).join("&"),e.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(a){var e=a[0],t=a[1],n=new URL(e,self.location),r=createCacheKey(n,hashParamName,t,/\.\w{8}\./);return[n.toString(),r]}));function setOfCachedUrls(a){return a.keys().then(function(a){return a.map(function(a){return a.url})}).then(function(a){return new Set(a)})}self.addEventListener("install",function(a){a.waitUntil(caches.open(cacheName).then(function(n){return setOfCachedUrls(n).then(function(t){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(e){if(!t.has(e)){var a=new Request(e,{credentials:"same-origin"});return fetch(a).then(function(a){if(!a.ok)throw new Error("Request for "+e+" returned a response with status "+a.status);return cleanResponse(a).then(function(a){return n.put(e,a)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(a){var t=new Set(urlsToCacheKeys.values());a.waitUntil(caches.open(cacheName).then(function(e){return e.keys().then(function(a){return Promise.all(a.map(function(a){if(!t.has(a.url))return e.delete(a)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(e){if("GET"===e.request.method){var a,t=stripIgnoredUrlParameters(e.request.url,ignoreUrlParametersMatching),n="index.html";(a=urlsToCacheKeys.has(t))||(t=addDirectoryIndex(t,n),a=urlsToCacheKeys.has(t));var r="/avtarbams/avtarbams.github.io/nanak-niwas/index.html";!a&&"navigate"===e.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],e.request.url)&&(t=new URL(r,self.location).toString(),a=urlsToCacheKeys.has(t)),a&&e.respondWith(caches.open(cacheName).then(function(a){return a.match(urlsToCacheKeys.get(t)).then(function(a){if(a)return a;throw Error("The cached response that was expected is missing.")})}).catch(function(a){return console.warn('Couldn\'t serve response for "%s" from cache: %O',e.request.url,a),fetch(e.request)}))}});